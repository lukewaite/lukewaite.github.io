---
layout: post
title:  "AWS Lambda and ELK"
date:   2015-07-09 19:38:35
categories: aws lambda elk logstash
---

I've been using the ELK stack for over three years. It's a tool that is used daily at work, so it's little surprise that
when [In-Touch Insight Systems][intouch] went down the AWS Lambda road for one of our newest projects, I wasn't happy
with using the default [CloudWatch Logs][lambda]. 

{% include image.html url="/images/2015-07-09-lambda-elk/logs_output.png" description="CloudWatch Logs with Lambda Output" %}

By default Lambda ships its logs to CloudWatch Logs. This is great, you can easily see what's going on during development
and little work is needed to get up and running. There are a few methods we could have used to get logs to our ELK stack:

#### How to get Logs to ELK
Sure, you could ship logs directly from your Lambda function to Redis for Logstash to pick up, or even directly to
Elasticsearch.

We opted not to go with this method for two reasons. First because this is against the Lambda philsophy of keeping
the function small and fast. Second, because the CloudWatch Logs generated by a Lambda function this great line:

{% highlight vim %}
REPORT RequestId: 7dea2e7a-2695-11e5-8880-81c589a6f94e	Duration: 584.64 ms	Billed Duration: 600 ms Memory Size: 128 MB	Max Memory Used: 19 MB
{% endhighlight %}

There's no way you can get information this accurate by running your own timers and profilers on your function. We
wanted to get it!

## logstash-input-cloudwatch-logs
I've just released the first beta version of [logstash-input-cloudwatch-logs](cwl-plugin). Initial design has focused
heavily on the Lambda -> CloudWatch Logs -> ELK use case. 

### How it works
You specify a `Log Group` to stream from and this input plugin will find and consume all `Log Streams` within. The plugin
will poll and look for streams with new records, and consume only the newest records.

### Try it yourself
* Download the [latest](https://github.com/lukewaite/logstash-input-cloudwatch-logs/releases) release of the plugin.
* Install by running `bin/plugin install <download path>/logstash-input-cloudwatch_logs-0.9.0.gem`

### Sample config
{% gist lukewaite/938cca0a306db3c9eabe %}

We install three grok filters on our log entries. First we match the generic log message, which is what appears in the
stream if you `console.log` something. We strip the timestamp, and pull out the `[lambda][request_id]` field for indexing.

The second grok filter handles the `START` and `END` log messages.

The third grok filter handles the precious `REPORT` message type and gives us the following wonderful fields:
{% highlight vim %}
[lambda][duration]
[lambda][billed_duration]
[lambda][memory_size]
[lambda][memory_used]
{% endhighlight %}

As we prepare to enter production on this new set of services, this should give us the visibility we need to make decisions
about how to properly size our Lambda functions, and also analyze any errors we encounter!

[intouch]:         http://www.intouchinsight.com
[lambda]:          http://aws.amazon.com/lambda
[cloudwatch-logs]: https://aws.amazon.com/blogs/aws/cloudwatch-log-service/
[cwl-plugin]:      https://github.com/lukewaite/logstash-input-cloudwatch-logs
